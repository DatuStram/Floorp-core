{"version":3,"file":"csk.js","sources":["../node_modules/.pnpm/solid-js@1.8.17/node_modules/solid-js/dist/solid.js","../node_modules/.pnpm/solid-js@1.8.17/node_modules/solid-js/universal/dist/universal.js","../src/solid-xul/solid-xul.ts","../src/preference/csk/setkey.ts","../src/preference/csk/page.tsx","../src/preference/hashchange.ts","../src/preference/csk/index.tsx","../src/preference/csk/category.tsx","../src/index-preferences-csk.ts"],"sourcesContent":["let taskIdCounter = 1,\n  isCallbackScheduled = false,\n  isPerformingWork = false,\n  taskQueue = [],\n  currentTask = null,\n  shouldYieldToHost = null,\n  yieldInterval = 5,\n  deadline = 0,\n  maxYieldInterval = 300,\n  scheduleCallback = null,\n  scheduledCallback = null;\nconst maxSigned31BitInt = 1073741823;\nfunction setupScheduler() {\n  const channel = new MessageChannel(),\n    port = channel.port2;\n  scheduleCallback = () => port.postMessage(null);\n  channel.port1.onmessage = () => {\n    if (scheduledCallback !== null) {\n      const currentTime = performance.now();\n      deadline = currentTime + yieldInterval;\n      const hasTimeRemaining = true;\n      try {\n        const hasMoreWork = scheduledCallback(hasTimeRemaining, currentTime);\n        if (!hasMoreWork) {\n          scheduledCallback = null;\n        } else port.postMessage(null);\n      } catch (error) {\n        port.postMessage(null);\n        throw error;\n      }\n    }\n  };\n  if (navigator && navigator.scheduling && navigator.scheduling.isInputPending) {\n    const scheduling = navigator.scheduling;\n    shouldYieldToHost = () => {\n      const currentTime = performance.now();\n      if (currentTime >= deadline) {\n        if (scheduling.isInputPending()) {\n          return true;\n        }\n        return currentTime >= maxYieldInterval;\n      } else {\n        return false;\n      }\n    };\n  } else {\n    shouldYieldToHost = () => performance.now() >= deadline;\n  }\n}\nfunction enqueue(taskQueue, task) {\n  function findIndex() {\n    let m = 0;\n    let n = taskQueue.length - 1;\n    while (m <= n) {\n      const k = (n + m) >> 1;\n      const cmp = task.expirationTime - taskQueue[k].expirationTime;\n      if (cmp > 0) m = k + 1;\n      else if (cmp < 0) n = k - 1;\n      else return k;\n    }\n    return m;\n  }\n  taskQueue.splice(findIndex(), 0, task);\n}\nfunction requestCallback(fn, options) {\n  if (!scheduleCallback) setupScheduler();\n  let startTime = performance.now(),\n    timeout = maxSigned31BitInt;\n  if (options && options.timeout) timeout = options.timeout;\n  const newTask = {\n    id: taskIdCounter++,\n    fn,\n    startTime,\n    expirationTime: startTime + timeout\n  };\n  enqueue(taskQueue, newTask);\n  if (!isCallbackScheduled && !isPerformingWork) {\n    isCallbackScheduled = true;\n    scheduledCallback = flushWork;\n    scheduleCallback();\n  }\n  return newTask;\n}\nfunction cancelCallback(task) {\n  task.fn = null;\n}\nfunction flushWork(hasTimeRemaining, initialTime) {\n  isCallbackScheduled = false;\n  isPerformingWork = true;\n  try {\n    return workLoop(hasTimeRemaining, initialTime);\n  } finally {\n    currentTask = null;\n    isPerformingWork = false;\n  }\n}\nfunction workLoop(hasTimeRemaining, initialTime) {\n  let currentTime = initialTime;\n  currentTask = taskQueue[0] || null;\n  while (currentTask !== null) {\n    if (currentTask.expirationTime > currentTime && (!hasTimeRemaining || shouldYieldToHost())) {\n      break;\n    }\n    const callback = currentTask.fn;\n    if (callback !== null) {\n      currentTask.fn = null;\n      const didUserCallbackTimeout = currentTask.expirationTime <= currentTime;\n      callback(didUserCallbackTimeout);\n      currentTime = performance.now();\n      if (currentTask === taskQueue[0]) {\n        taskQueue.shift();\n      }\n    } else taskQueue.shift();\n    currentTask = taskQueue[0] || null;\n  }\n  return currentTask !== null;\n}\n\nconst sharedConfig = {\n  context: undefined,\n  registry: undefined\n};\nfunction setHydrateContext(context) {\n  sharedConfig.context = context;\n}\nfunction nextHydrateContext() {\n  return {\n    ...sharedConfig.context,\n    id: `${sharedConfig.context.id}${sharedConfig.context.count++}-`,\n    count: 0\n  };\n}\n\nconst equalFn = (a, b) => a === b;\nconst $PROXY = Symbol(\"solid-proxy\");\nconst $TRACK = Symbol(\"solid-track\");\nconst $DEVCOMP = Symbol(\"solid-dev-component\");\nconst signalOptions = {\n  equals: equalFn\n};\nlet ERROR = null;\nlet runEffects = runQueue;\nconst STALE = 1;\nconst PENDING = 2;\nconst UNOWNED = {\n  owned: null,\n  cleanups: null,\n  context: null,\n  owner: null\n};\nconst NO_INIT = {};\nvar Owner = null;\nlet Transition = null;\nlet Scheduler = null;\nlet ExternalSourceConfig = null;\nlet Listener = null;\nlet Updates = null;\nlet Effects = null;\nlet ExecCount = 0;\nfunction createRoot(fn, detachedOwner) {\n  const listener = Listener,\n    owner = Owner,\n    unowned = fn.length === 0,\n    current = detachedOwner === undefined ? owner : detachedOwner,\n    root = unowned\n      ? UNOWNED\n      : {\n          owned: null,\n          cleanups: null,\n          context: current ? current.context : null,\n          owner: current\n        },\n    updateFn = unowned ? fn : () => fn(() => untrack(() => cleanNode(root)));\n  Owner = root;\n  Listener = null;\n  try {\n    return runUpdates(updateFn, true);\n  } finally {\n    Listener = listener;\n    Owner = owner;\n  }\n}\nfunction createSignal(value, options) {\n  options = options ? Object.assign({}, signalOptions, options) : signalOptions;\n  const s = {\n    value,\n    observers: null,\n    observerSlots: null,\n    comparator: options.equals || undefined\n  };\n  const setter = value => {\n    if (typeof value === \"function\") {\n      if (Transition && Transition.running && Transition.sources.has(s)) value = value(s.tValue);\n      else value = value(s.value);\n    }\n    return writeSignal(s, value);\n  };\n  return [readSignal.bind(s), setter];\n}\nfunction createComputed(fn, value, options) {\n  const c = createComputation(fn, value, true, STALE);\n  if (Scheduler && Transition && Transition.running) Updates.push(c);\n  else updateComputation(c);\n}\nfunction createRenderEffect(fn, value, options) {\n  const c = createComputation(fn, value, false, STALE);\n  if (Scheduler && Transition && Transition.running) Updates.push(c);\n  else updateComputation(c);\n}\nfunction createEffect(fn, value, options) {\n  runEffects = runUserEffects;\n  const c = createComputation(fn, value, false, STALE),\n    s = SuspenseContext && useContext(SuspenseContext);\n  if (s) c.suspense = s;\n  if (!options || !options.render) c.user = true;\n  Effects ? Effects.push(c) : updateComputation(c);\n}\nfunction createReaction(onInvalidate, options) {\n  let fn;\n  const c = createComputation(\n      () => {\n        fn ? fn() : untrack(onInvalidate);\n        fn = undefined;\n      },\n      undefined,\n      false,\n      0\n    ),\n    s = SuspenseContext && useContext(SuspenseContext);\n  if (s) c.suspense = s;\n  c.user = true;\n  return tracking => {\n    fn = tracking;\n    updateComputation(c);\n  };\n}\nfunction createMemo(fn, value, options) {\n  options = options ? Object.assign({}, signalOptions, options) : signalOptions;\n  const c = createComputation(fn, value, true, 0);\n  c.observers = null;\n  c.observerSlots = null;\n  c.comparator = options.equals || undefined;\n  if (Scheduler && Transition && Transition.running) {\n    c.tState = STALE;\n    Updates.push(c);\n  } else updateComputation(c);\n  return readSignal.bind(c);\n}\nfunction isPromise(v) {\n  return v && typeof v === \"object\" && \"then\" in v;\n}\nfunction createResource(pSource, pFetcher, pOptions) {\n  let source;\n  let fetcher;\n  let options;\n  if ((arguments.length === 2 && typeof pFetcher === \"object\") || arguments.length === 1) {\n    source = true;\n    fetcher = pSource;\n    options = pFetcher || {};\n  } else {\n    source = pSource;\n    fetcher = pFetcher;\n    options = pOptions || {};\n  }\n  let pr = null,\n    initP = NO_INIT,\n    id = null,\n    loadedUnderTransition = false,\n    scheduled = false,\n    resolved = \"initialValue\" in options,\n    dynamic = typeof source === \"function\" && createMemo(source);\n  const contexts = new Set(),\n    [value, setValue] = (options.storage || createSignal)(options.initialValue),\n    [error, setError] = createSignal(undefined),\n    [track, trigger] = createSignal(undefined, {\n      equals: false\n    }),\n    [state, setState] = createSignal(resolved ? \"ready\" : \"unresolved\");\n  if (sharedConfig.context) {\n    id = `${sharedConfig.context.id}${sharedConfig.context.count++}`;\n    let v;\n    if (options.ssrLoadFrom === \"initial\") initP = options.initialValue;\n    else if (sharedConfig.load && (v = sharedConfig.load(id))) initP = v;\n  }\n  function loadEnd(p, v, error, key) {\n    if (pr === p) {\n      pr = null;\n      key !== undefined && (resolved = true);\n      if ((p === initP || v === initP) && options.onHydrated)\n        queueMicrotask(() =>\n          options.onHydrated(key, {\n            value: v\n          })\n        );\n      initP = NO_INIT;\n      if (Transition && p && loadedUnderTransition) {\n        Transition.promises.delete(p);\n        loadedUnderTransition = false;\n        runUpdates(() => {\n          Transition.running = true;\n          completeLoad(v, error);\n        }, false);\n      } else completeLoad(v, error);\n    }\n    return v;\n  }\n  function completeLoad(v, err) {\n    runUpdates(() => {\n      if (err === undefined) setValue(() => v);\n      setState(err !== undefined ? \"errored\" : resolved ? \"ready\" : \"unresolved\");\n      setError(err);\n      for (const c of contexts.keys()) c.decrement();\n      contexts.clear();\n    }, false);\n  }\n  function read() {\n    const c = SuspenseContext && useContext(SuspenseContext),\n      v = value(),\n      err = error();\n    if (err !== undefined && !pr) throw err;\n    if (Listener && !Listener.user && c) {\n      createComputed(() => {\n        track();\n        if (pr) {\n          if (c.resolved && Transition && loadedUnderTransition) Transition.promises.add(pr);\n          else if (!contexts.has(c)) {\n            c.increment();\n            contexts.add(c);\n          }\n        }\n      });\n    }\n    return v;\n  }\n  function load(refetching = true) {\n    if (refetching !== false && scheduled) return;\n    scheduled = false;\n    const lookup = dynamic ? dynamic() : source;\n    loadedUnderTransition = Transition && Transition.running;\n    if (lookup == null || lookup === false) {\n      loadEnd(pr, untrack(value));\n      return;\n    }\n    if (Transition && pr) Transition.promises.delete(pr);\n    const p =\n      initP !== NO_INIT\n        ? initP\n        : untrack(() =>\n            fetcher(lookup, {\n              value: value(),\n              refetching\n            })\n          );\n    if (!isPromise(p)) {\n      loadEnd(pr, p, undefined, lookup);\n      return p;\n    }\n    pr = p;\n    if (\"value\" in p) {\n      if (p.status === \"success\") loadEnd(pr, p.value, undefined, lookup);\n      else loadEnd(pr, undefined, undefined, lookup);\n      return p;\n    }\n    scheduled = true;\n    queueMicrotask(() => (scheduled = false));\n    runUpdates(() => {\n      setState(resolved ? \"refreshing\" : \"pending\");\n      trigger();\n    }, false);\n    return p.then(\n      v => loadEnd(p, v, undefined, lookup),\n      e => loadEnd(p, undefined, castError(e), lookup)\n    );\n  }\n  Object.defineProperties(read, {\n    state: {\n      get: () => state()\n    },\n    error: {\n      get: () => error()\n    },\n    loading: {\n      get() {\n        const s = state();\n        return s === \"pending\" || s === \"refreshing\";\n      }\n    },\n    latest: {\n      get() {\n        if (!resolved) return read();\n        const err = error();\n        if (err && !pr) throw err;\n        return value();\n      }\n    }\n  });\n  if (dynamic) createComputed(() => load(false));\n  else load(false);\n  return [\n    read,\n    {\n      refetch: load,\n      mutate: setValue\n    }\n  ];\n}\nfunction createDeferred(source, options) {\n  let t,\n    timeout = options ? options.timeoutMs : undefined;\n  const node = createComputation(\n    () => {\n      if (!t || !t.fn)\n        t = requestCallback(\n          () => setDeferred(() => node.value),\n          timeout !== undefined\n            ? {\n                timeout\n              }\n            : undefined\n        );\n      return source();\n    },\n    undefined,\n    true\n  );\n  const [deferred, setDeferred] = createSignal(\n    Transition && Transition.running && Transition.sources.has(node) ? node.tValue : node.value,\n    options\n  );\n  updateComputation(node);\n  setDeferred(() =>\n    Transition && Transition.running && Transition.sources.has(node) ? node.tValue : node.value\n  );\n  return deferred;\n}\nfunction createSelector(source, fn = equalFn, options) {\n  const subs = new Map();\n  const node = createComputation(\n    p => {\n      const v = source();\n      for (const [key, val] of subs.entries())\n        if (fn(key, v) !== fn(key, p)) {\n          for (const c of val.values()) {\n            c.state = STALE;\n            if (c.pure) Updates.push(c);\n            else Effects.push(c);\n          }\n        }\n      return v;\n    },\n    undefined,\n    true,\n    STALE\n  );\n  updateComputation(node);\n  return key => {\n    const listener = Listener;\n    if (listener) {\n      let l;\n      if ((l = subs.get(key))) l.add(listener);\n      else subs.set(key, (l = new Set([listener])));\n      onCleanup(() => {\n        l.delete(listener);\n        !l.size && subs.delete(key);\n      });\n    }\n    return fn(\n      key,\n      Transition && Transition.running && Transition.sources.has(node) ? node.tValue : node.value\n    );\n  };\n}\nfunction batch(fn) {\n  return runUpdates(fn, false);\n}\nfunction untrack(fn) {\n  if (!ExternalSourceConfig && Listener === null) return fn();\n  const listener = Listener;\n  Listener = null;\n  try {\n    if (ExternalSourceConfig) return ExternalSourceConfig.untrack(fn);\n    return fn();\n  } finally {\n    Listener = listener;\n  }\n}\nfunction on(deps, fn, options) {\n  const isArray = Array.isArray(deps);\n  let prevInput;\n  let defer = options && options.defer;\n  return prevValue => {\n    let input;\n    if (isArray) {\n      input = Array(deps.length);\n      for (let i = 0; i < deps.length; i++) input[i] = deps[i]();\n    } else input = deps();\n    if (defer) {\n      defer = false;\n      return prevValue;\n    }\n    const result = untrack(() => fn(input, prevInput, prevValue));\n    prevInput = input;\n    return result;\n  };\n}\nfunction onMount(fn) {\n  createEffect(() => untrack(fn));\n}\nfunction onCleanup(fn) {\n  if (Owner === null);\n  else if (Owner.cleanups === null) Owner.cleanups = [fn];\n  else Owner.cleanups.push(fn);\n  return fn;\n}\nfunction catchError(fn, handler) {\n  ERROR || (ERROR = Symbol(\"error\"));\n  Owner = createComputation(undefined, undefined, true);\n  Owner.context = {\n    ...Owner.context,\n    [ERROR]: [handler]\n  };\n  if (Transition && Transition.running) Transition.sources.add(Owner);\n  try {\n    return fn();\n  } catch (err) {\n    handleError(err);\n  } finally {\n    Owner = Owner.owner;\n  }\n}\nfunction getListener() {\n  return Listener;\n}\nfunction getOwner() {\n  return Owner;\n}\nfunction runWithOwner(o, fn) {\n  const prev = Owner;\n  const prevListener = Listener;\n  Owner = o;\n  Listener = null;\n  try {\n    return runUpdates(fn, true);\n  } catch (err) {\n    handleError(err);\n  } finally {\n    Owner = prev;\n    Listener = prevListener;\n  }\n}\nfunction enableScheduling(scheduler = requestCallback) {\n  Scheduler = scheduler;\n}\nfunction startTransition(fn) {\n  if (Transition && Transition.running) {\n    fn();\n    return Transition.done;\n  }\n  const l = Listener;\n  const o = Owner;\n  return Promise.resolve().then(() => {\n    Listener = l;\n    Owner = o;\n    let t;\n    if (Scheduler || SuspenseContext) {\n      t =\n        Transition ||\n        (Transition = {\n          sources: new Set(),\n          effects: [],\n          promises: new Set(),\n          disposed: new Set(),\n          queue: new Set(),\n          running: true\n        });\n      t.done || (t.done = new Promise(res => (t.resolve = res)));\n      t.running = true;\n    }\n    runUpdates(fn, false);\n    Listener = Owner = null;\n    return t ? t.done : undefined;\n  });\n}\nconst [transPending, setTransPending] = /*@__PURE__*/ createSignal(false);\nfunction useTransition() {\n  return [transPending, startTransition];\n}\nfunction resumeEffects(e) {\n  Effects.push.apply(Effects, e);\n  e.length = 0;\n}\nfunction createContext(defaultValue, options) {\n  const id = Symbol(\"context\");\n  return {\n    id,\n    Provider: createProvider(id),\n    defaultValue\n  };\n}\nfunction useContext(context) {\n  return Owner && Owner.context && Owner.context[context.id] !== undefined\n    ? Owner.context[context.id]\n    : context.defaultValue;\n}\nfunction children(fn) {\n  const children = createMemo(fn);\n  const memo = createMemo(() => resolveChildren(children()));\n  memo.toArray = () => {\n    const c = memo();\n    return Array.isArray(c) ? c : c != null ? [c] : [];\n  };\n  return memo;\n}\nlet SuspenseContext;\nfunction getSuspenseContext() {\n  return SuspenseContext || (SuspenseContext = createContext());\n}\nfunction enableExternalSource(factory, untrack = fn => fn()) {\n  if (ExternalSourceConfig) {\n    const { factory: oldFactory, untrack: oldUntrack } = ExternalSourceConfig;\n    ExternalSourceConfig = {\n      factory: (fn, trigger) => {\n        const oldSource = oldFactory(fn, trigger);\n        const source = factory(x => oldSource.track(x), trigger);\n        return {\n          track: x => source.track(x),\n          dispose() {\n            source.dispose();\n            oldSource.dispose();\n          }\n        };\n      },\n      untrack: fn => oldUntrack(() => untrack(fn))\n    };\n  } else {\n    ExternalSourceConfig = {\n      factory,\n      untrack\n    };\n  }\n}\nfunction readSignal() {\n  const runningTransition = Transition && Transition.running;\n  if (this.sources && (runningTransition ? this.tState : this.state)) {\n    if ((runningTransition ? this.tState : this.state) === STALE) updateComputation(this);\n    else {\n      const updates = Updates;\n      Updates = null;\n      runUpdates(() => lookUpstream(this), false);\n      Updates = updates;\n    }\n  }\n  if (Listener) {\n    const sSlot = this.observers ? this.observers.length : 0;\n    if (!Listener.sources) {\n      Listener.sources = [this];\n      Listener.sourceSlots = [sSlot];\n    } else {\n      Listener.sources.push(this);\n      Listener.sourceSlots.push(sSlot);\n    }\n    if (!this.observers) {\n      this.observers = [Listener];\n      this.observerSlots = [Listener.sources.length - 1];\n    } else {\n      this.observers.push(Listener);\n      this.observerSlots.push(Listener.sources.length - 1);\n    }\n  }\n  if (runningTransition && Transition.sources.has(this)) return this.tValue;\n  return this.value;\n}\nfunction writeSignal(node, value, isComp) {\n  let current =\n    Transition && Transition.running && Transition.sources.has(node) ? node.tValue : node.value;\n  if (!node.comparator || !node.comparator(current, value)) {\n    if (Transition) {\n      const TransitionRunning = Transition.running;\n      if (TransitionRunning || (!isComp && Transition.sources.has(node))) {\n        Transition.sources.add(node);\n        node.tValue = value;\n      }\n      if (!TransitionRunning) node.value = value;\n    } else node.value = value;\n    if (node.observers && node.observers.length) {\n      runUpdates(() => {\n        for (let i = 0; i < node.observers.length; i += 1) {\n          const o = node.observers[i];\n          const TransitionRunning = Transition && Transition.running;\n          if (TransitionRunning && Transition.disposed.has(o)) continue;\n          if (TransitionRunning ? !o.tState : !o.state) {\n            if (o.pure) Updates.push(o);\n            else Effects.push(o);\n            if (o.observers) markDownstream(o);\n          }\n          if (!TransitionRunning) o.state = STALE;\n          else o.tState = STALE;\n        }\n        if (Updates.length > 10e5) {\n          Updates = [];\n          if (false);\n          throw new Error();\n        }\n      }, false);\n    }\n  }\n  return value;\n}\nfunction updateComputation(node) {\n  if (!node.fn) return;\n  cleanNode(node);\n  const time = ExecCount;\n  runComputation(\n    node,\n    Transition && Transition.running && Transition.sources.has(node) ? node.tValue : node.value,\n    time\n  );\n  if (Transition && !Transition.running && Transition.sources.has(node)) {\n    queueMicrotask(() => {\n      runUpdates(() => {\n        Transition && (Transition.running = true);\n        Listener = Owner = node;\n        runComputation(node, node.tValue, time);\n        Listener = Owner = null;\n      }, false);\n    });\n  }\n}\nfunction runComputation(node, value, time) {\n  let nextValue;\n  const owner = Owner,\n    listener = Listener;\n  Listener = Owner = node;\n  try {\n    nextValue = node.fn(value);\n  } catch (err) {\n    if (node.pure) {\n      if (Transition && Transition.running) {\n        node.tState = STALE;\n        node.tOwned && node.tOwned.forEach(cleanNode);\n        node.tOwned = undefined;\n      } else {\n        node.state = STALE;\n        node.owned && node.owned.forEach(cleanNode);\n        node.owned = null;\n      }\n    }\n    node.updatedAt = time + 1;\n    return handleError(err);\n  } finally {\n    Listener = listener;\n    Owner = owner;\n  }\n  if (!node.updatedAt || node.updatedAt <= time) {\n    if (node.updatedAt != null && \"observers\" in node) {\n      writeSignal(node, nextValue, true);\n    } else if (Transition && Transition.running && node.pure) {\n      Transition.sources.add(node);\n      node.tValue = nextValue;\n    } else node.value = nextValue;\n    node.updatedAt = time;\n  }\n}\nfunction createComputation(fn, init, pure, state = STALE, options) {\n  const c = {\n    fn,\n    state: state,\n    updatedAt: null,\n    owned: null,\n    sources: null,\n    sourceSlots: null,\n    cleanups: null,\n    value: init,\n    owner: Owner,\n    context: Owner ? Owner.context : null,\n    pure\n  };\n  if (Transition && Transition.running) {\n    c.state = 0;\n    c.tState = state;\n  }\n  if (Owner === null);\n  else if (Owner !== UNOWNED) {\n    if (Transition && Transition.running && Owner.pure) {\n      if (!Owner.tOwned) Owner.tOwned = [c];\n      else Owner.tOwned.push(c);\n    } else {\n      if (!Owner.owned) Owner.owned = [c];\n      else Owner.owned.push(c);\n    }\n  }\n  if (ExternalSourceConfig && c.fn) {\n    const [track, trigger] = createSignal(undefined, {\n      equals: false\n    });\n    const ordinary = ExternalSourceConfig.factory(c.fn, trigger);\n    onCleanup(() => ordinary.dispose());\n    const triggerInTransition = () => startTransition(trigger).then(() => inTransition.dispose());\n    const inTransition = ExternalSourceConfig.factory(c.fn, triggerInTransition);\n    c.fn = x => {\n      track();\n      return Transition && Transition.running ? inTransition.track(x) : ordinary.track(x);\n    };\n  }\n  return c;\n}\nfunction runTop(node) {\n  const runningTransition = Transition && Transition.running;\n  if ((runningTransition ? node.tState : node.state) === 0) return;\n  if ((runningTransition ? node.tState : node.state) === PENDING) return lookUpstream(node);\n  if (node.suspense && untrack(node.suspense.inFallback)) return node.suspense.effects.push(node);\n  const ancestors = [node];\n  while ((node = node.owner) && (!node.updatedAt || node.updatedAt < ExecCount)) {\n    if (runningTransition && Transition.disposed.has(node)) return;\n    if (runningTransition ? node.tState : node.state) ancestors.push(node);\n  }\n  for (let i = ancestors.length - 1; i >= 0; i--) {\n    node = ancestors[i];\n    if (runningTransition) {\n      let top = node,\n        prev = ancestors[i + 1];\n      while ((top = top.owner) && top !== prev) {\n        if (Transition.disposed.has(top)) return;\n      }\n    }\n    if ((runningTransition ? node.tState : node.state) === STALE) {\n      updateComputation(node);\n    } else if ((runningTransition ? node.tState : node.state) === PENDING) {\n      const updates = Updates;\n      Updates = null;\n      runUpdates(() => lookUpstream(node, ancestors[0]), false);\n      Updates = updates;\n    }\n  }\n}\nfunction runUpdates(fn, init) {\n  if (Updates) return fn();\n  let wait = false;\n  if (!init) Updates = [];\n  if (Effects) wait = true;\n  else Effects = [];\n  ExecCount++;\n  try {\n    const res = fn();\n    completeUpdates(wait);\n    return res;\n  } catch (err) {\n    if (!wait) Effects = null;\n    Updates = null;\n    handleError(err);\n  }\n}\nfunction completeUpdates(wait) {\n  if (Updates) {\n    if (Scheduler && Transition && Transition.running) scheduleQueue(Updates);\n    else runQueue(Updates);\n    Updates = null;\n  }\n  if (wait) return;\n  let res;\n  if (Transition) {\n    if (!Transition.promises.size && !Transition.queue.size) {\n      const sources = Transition.sources;\n      const disposed = Transition.disposed;\n      Effects.push.apply(Effects, Transition.effects);\n      res = Transition.resolve;\n      for (const e of Effects) {\n        \"tState\" in e && (e.state = e.tState);\n        delete e.tState;\n      }\n      Transition = null;\n      runUpdates(() => {\n        for (const d of disposed) cleanNode(d);\n        for (const v of sources) {\n          v.value = v.tValue;\n          if (v.owned) {\n            for (let i = 0, len = v.owned.length; i < len; i++) cleanNode(v.owned[i]);\n          }\n          if (v.tOwned) v.owned = v.tOwned;\n          delete v.tValue;\n          delete v.tOwned;\n          v.tState = 0;\n        }\n        setTransPending(false);\n      }, false);\n    } else if (Transition.running) {\n      Transition.running = false;\n      Transition.effects.push.apply(Transition.effects, Effects);\n      Effects = null;\n      setTransPending(true);\n      return;\n    }\n  }\n  const e = Effects;\n  Effects = null;\n  if (e.length) runUpdates(() => runEffects(e), false);\n  if (res) res();\n}\nfunction runQueue(queue) {\n  for (let i = 0; i < queue.length; i++) runTop(queue[i]);\n}\nfunction scheduleQueue(queue) {\n  for (let i = 0; i < queue.length; i++) {\n    const item = queue[i];\n    const tasks = Transition.queue;\n    if (!tasks.has(item)) {\n      tasks.add(item);\n      Scheduler(() => {\n        tasks.delete(item);\n        runUpdates(() => {\n          Transition.running = true;\n          runTop(item);\n        }, false);\n        Transition && (Transition.running = false);\n      });\n    }\n  }\n}\nfunction runUserEffects(queue) {\n  let i,\n    userLength = 0;\n  for (i = 0; i < queue.length; i++) {\n    const e = queue[i];\n    if (!e.user) runTop(e);\n    else queue[userLength++] = e;\n  }\n  if (sharedConfig.context) {\n    if (sharedConfig.count) {\n      sharedConfig.effects || (sharedConfig.effects = []);\n      sharedConfig.effects.push(...queue.slice(0, userLength));\n      return;\n    } else if (sharedConfig.effects) {\n      queue = [...sharedConfig.effects, ...queue];\n      userLength += sharedConfig.effects.length;\n      delete sharedConfig.effects;\n    }\n    setHydrateContext();\n  }\n  for (i = 0; i < userLength; i++) runTop(queue[i]);\n}\nfunction lookUpstream(node, ignore) {\n  const runningTransition = Transition && Transition.running;\n  if (runningTransition) node.tState = 0;\n  else node.state = 0;\n  for (let i = 0; i < node.sources.length; i += 1) {\n    const source = node.sources[i];\n    if (source.sources) {\n      const state = runningTransition ? source.tState : source.state;\n      if (state === STALE) {\n        if (source !== ignore && (!source.updatedAt || source.updatedAt < ExecCount))\n          runTop(source);\n      } else if (state === PENDING) lookUpstream(source, ignore);\n    }\n  }\n}\nfunction markDownstream(node) {\n  const runningTransition = Transition && Transition.running;\n  for (let i = 0; i < node.observers.length; i += 1) {\n    const o = node.observers[i];\n    if (runningTransition ? !o.tState : !o.state) {\n      if (runningTransition) o.tState = PENDING;\n      else o.state = PENDING;\n      if (o.pure) Updates.push(o);\n      else Effects.push(o);\n      o.observers && markDownstream(o);\n    }\n  }\n}\nfunction cleanNode(node) {\n  let i;\n  if (node.sources) {\n    while (node.sources.length) {\n      const source = node.sources.pop(),\n        index = node.sourceSlots.pop(),\n        obs = source.observers;\n      if (obs && obs.length) {\n        const n = obs.pop(),\n          s = source.observerSlots.pop();\n        if (index < obs.length) {\n          n.sourceSlots[s] = index;\n          obs[index] = n;\n          source.observerSlots[index] = s;\n        }\n      }\n    }\n  }\n  if (Transition && Transition.running && node.pure) {\n    if (node.tOwned) {\n      for (i = node.tOwned.length - 1; i >= 0; i--) cleanNode(node.tOwned[i]);\n      delete node.tOwned;\n    }\n    reset(node, true);\n  } else if (node.owned) {\n    for (i = node.owned.length - 1; i >= 0; i--) cleanNode(node.owned[i]);\n    node.owned = null;\n  }\n  if (node.cleanups) {\n    for (i = node.cleanups.length - 1; i >= 0; i--) node.cleanups[i]();\n    node.cleanups = null;\n  }\n  if (Transition && Transition.running) node.tState = 0;\n  else node.state = 0;\n}\nfunction reset(node, top) {\n  if (!top) {\n    node.tState = 0;\n    Transition.disposed.add(node);\n  }\n  if (node.owned) {\n    for (let i = 0; i < node.owned.length; i++) reset(node.owned[i]);\n  }\n}\nfunction castError(err) {\n  if (err instanceof Error) return err;\n  return new Error(typeof err === \"string\" ? err : \"Unknown error\", {\n    cause: err\n  });\n}\nfunction runErrors(err, fns, owner) {\n  try {\n    for (const f of fns) f(err);\n  } catch (e) {\n    handleError(e, (owner && owner.owner) || null);\n  }\n}\nfunction handleError(err, owner = Owner) {\n  const fns = ERROR && owner && owner.context && owner.context[ERROR];\n  const error = castError(err);\n  if (!fns) throw error;\n  if (Effects)\n    Effects.push({\n      fn() {\n        runErrors(error, fns, owner);\n      },\n      state: STALE\n    });\n  else runErrors(error, fns, owner);\n}\nfunction resolveChildren(children) {\n  if (typeof children === \"function\" && !children.length) return resolveChildren(children());\n  if (Array.isArray(children)) {\n    const results = [];\n    for (let i = 0; i < children.length; i++) {\n      const result = resolveChildren(children[i]);\n      Array.isArray(result) ? results.push.apply(results, result) : results.push(result);\n    }\n    return results;\n  }\n  return children;\n}\nfunction createProvider(id, options) {\n  return function provider(props) {\n    let res;\n    createRenderEffect(\n      () =>\n        (res = untrack(() => {\n          Owner.context = {\n            ...Owner.context,\n            [id]: props.value\n          };\n          return children(() => props.children);\n        })),\n      undefined\n    );\n    return res;\n  };\n}\nfunction onError(fn) {\n  ERROR || (ERROR = Symbol(\"error\"));\n  if (Owner === null);\n  else if (Owner.context === null || !Owner.context[ERROR]) {\n    Owner.context = {\n      ...Owner.context,\n      [ERROR]: [fn]\n    };\n    mutateContext(Owner, ERROR, [fn]);\n  } else Owner.context[ERROR].push(fn);\n}\nfunction mutateContext(o, key, value) {\n  if (o.owned) {\n    for (let i = 0; i < o.owned.length; i++) {\n      if (o.owned[i].context === o.context) mutateContext(o.owned[i], key, value);\n      if (!o.owned[i].context) {\n        o.owned[i].context = o.context;\n        mutateContext(o.owned[i], key, value);\n      } else if (!o.owned[i].context[key]) {\n        o.owned[i].context[key] = value;\n        mutateContext(o.owned[i], key, value);\n      }\n    }\n  }\n}\n\nfunction observable(input) {\n  return {\n    subscribe(observer) {\n      if (!(observer instanceof Object) || observer == null) {\n        throw new TypeError(\"Expected the observer to be an object.\");\n      }\n      const handler =\n        typeof observer === \"function\" ? observer : observer.next && observer.next.bind(observer);\n      if (!handler) {\n        return {\n          unsubscribe() {}\n        };\n      }\n      const dispose = createRoot(disposer => {\n        createEffect(() => {\n          const v = input();\n          untrack(() => handler(v));\n        });\n        return disposer;\n      });\n      if (getOwner()) onCleanup(dispose);\n      return {\n        unsubscribe() {\n          dispose();\n        }\n      };\n    },\n    [Symbol.observable || \"@@observable\"]() {\n      return this;\n    }\n  };\n}\nfunction from(producer) {\n  const [s, set] = createSignal(undefined, {\n    equals: false\n  });\n  if (\"subscribe\" in producer) {\n    const unsub = producer.subscribe(v => set(() => v));\n    onCleanup(() => (\"unsubscribe\" in unsub ? unsub.unsubscribe() : unsub()));\n  } else {\n    const clean = producer(set);\n    onCleanup(clean);\n  }\n  return s;\n}\n\nconst FALLBACK = Symbol(\"fallback\");\nfunction dispose(d) {\n  for (let i = 0; i < d.length; i++) d[i]();\n}\nfunction mapArray(list, mapFn, options = {}) {\n  let items = [],\n    mapped = [],\n    disposers = [],\n    len = 0,\n    indexes = mapFn.length > 1 ? [] : null;\n  onCleanup(() => dispose(disposers));\n  return () => {\n    let newItems = list() || [],\n      i,\n      j;\n    newItems[$TRACK];\n    return untrack(() => {\n      let newLen = newItems.length,\n        newIndices,\n        newIndicesNext,\n        temp,\n        tempdisposers,\n        tempIndexes,\n        start,\n        end,\n        newEnd,\n        item;\n      if (newLen === 0) {\n        if (len !== 0) {\n          dispose(disposers);\n          disposers = [];\n          items = [];\n          mapped = [];\n          len = 0;\n          indexes && (indexes = []);\n        }\n        if (options.fallback) {\n          items = [FALLBACK];\n          mapped[0] = createRoot(disposer => {\n            disposers[0] = disposer;\n            return options.fallback();\n          });\n          len = 1;\n        }\n      } else if (len === 0) {\n        mapped = new Array(newLen);\n        for (j = 0; j < newLen; j++) {\n          items[j] = newItems[j];\n          mapped[j] = createRoot(mapper);\n        }\n        len = newLen;\n      } else {\n        temp = new Array(newLen);\n        tempdisposers = new Array(newLen);\n        indexes && (tempIndexes = new Array(newLen));\n        for (\n          start = 0, end = Math.min(len, newLen);\n          start < end && items[start] === newItems[start];\n          start++\n        );\n        for (\n          end = len - 1, newEnd = newLen - 1;\n          end >= start && newEnd >= start && items[end] === newItems[newEnd];\n          end--, newEnd--\n        ) {\n          temp[newEnd] = mapped[end];\n          tempdisposers[newEnd] = disposers[end];\n          indexes && (tempIndexes[newEnd] = indexes[end]);\n        }\n        newIndices = new Map();\n        newIndicesNext = new Array(newEnd + 1);\n        for (j = newEnd; j >= start; j--) {\n          item = newItems[j];\n          i = newIndices.get(item);\n          newIndicesNext[j] = i === undefined ? -1 : i;\n          newIndices.set(item, j);\n        }\n        for (i = start; i <= end; i++) {\n          item = items[i];\n          j = newIndices.get(item);\n          if (j !== undefined && j !== -1) {\n            temp[j] = mapped[i];\n            tempdisposers[j] = disposers[i];\n            indexes && (tempIndexes[j] = indexes[i]);\n            j = newIndicesNext[j];\n            newIndices.set(item, j);\n          } else disposers[i]();\n        }\n        for (j = start; j < newLen; j++) {\n          if (j in temp) {\n            mapped[j] = temp[j];\n            disposers[j] = tempdisposers[j];\n            if (indexes) {\n              indexes[j] = tempIndexes[j];\n              indexes[j](j);\n            }\n          } else mapped[j] = createRoot(mapper);\n        }\n        mapped = mapped.slice(0, (len = newLen));\n        items = newItems.slice(0);\n      }\n      return mapped;\n    });\n    function mapper(disposer) {\n      disposers[j] = disposer;\n      if (indexes) {\n        const [s, set] = createSignal(j);\n        indexes[j] = set;\n        return mapFn(newItems[j], s);\n      }\n      return mapFn(newItems[j]);\n    }\n  };\n}\nfunction indexArray(list, mapFn, options = {}) {\n  let items = [],\n    mapped = [],\n    disposers = [],\n    signals = [],\n    len = 0,\n    i;\n  onCleanup(() => dispose(disposers));\n  return () => {\n    const newItems = list() || [];\n    newItems[$TRACK];\n    return untrack(() => {\n      if (newItems.length === 0) {\n        if (len !== 0) {\n          dispose(disposers);\n          disposers = [];\n          items = [];\n          mapped = [];\n          len = 0;\n          signals = [];\n        }\n        if (options.fallback) {\n          items = [FALLBACK];\n          mapped[0] = createRoot(disposer => {\n            disposers[0] = disposer;\n            return options.fallback();\n          });\n          len = 1;\n        }\n        return mapped;\n      }\n      if (items[0] === FALLBACK) {\n        disposers[0]();\n        disposers = [];\n        items = [];\n        mapped = [];\n        len = 0;\n      }\n      for (i = 0; i < newItems.length; i++) {\n        if (i < items.length && items[i] !== newItems[i]) {\n          signals[i](() => newItems[i]);\n        } else if (i >= items.length) {\n          mapped[i] = createRoot(mapper);\n        }\n      }\n      for (; i < items.length; i++) {\n        disposers[i]();\n      }\n      len = signals.length = disposers.length = newItems.length;\n      items = newItems.slice(0);\n      return (mapped = mapped.slice(0, len));\n    });\n    function mapper(disposer) {\n      disposers[i] = disposer;\n      const [s, set] = createSignal(newItems[i]);\n      signals[i] = set;\n      return mapFn(s, i);\n    }\n  };\n}\n\nlet hydrationEnabled = false;\nfunction enableHydration() {\n  hydrationEnabled = true;\n}\nfunction createComponent(Comp, props) {\n  if (hydrationEnabled) {\n    if (sharedConfig.context) {\n      const c = sharedConfig.context;\n      setHydrateContext(nextHydrateContext());\n      const r = untrack(() => Comp(props || {}));\n      setHydrateContext(c);\n      return r;\n    }\n  }\n  return untrack(() => Comp(props || {}));\n}\nfunction trueFn() {\n  return true;\n}\nconst propTraps = {\n  get(_, property, receiver) {\n    if (property === $PROXY) return receiver;\n    return _.get(property);\n  },\n  has(_, property) {\n    if (property === $PROXY) return true;\n    return _.has(property);\n  },\n  set: trueFn,\n  deleteProperty: trueFn,\n  getOwnPropertyDescriptor(_, property) {\n    return {\n      configurable: true,\n      enumerable: true,\n      get() {\n        return _.get(property);\n      },\n      set: trueFn,\n      deleteProperty: trueFn\n    };\n  },\n  ownKeys(_) {\n    return _.keys();\n  }\n};\nfunction resolveSource(s) {\n  return !(s = typeof s === \"function\" ? s() : s) ? {} : s;\n}\nfunction resolveSources() {\n  for (let i = 0, length = this.length; i < length; ++i) {\n    const v = this[i]();\n    if (v !== undefined) return v;\n  }\n}\nfunction mergeProps(...sources) {\n  let proxy = false;\n  for (let i = 0; i < sources.length; i++) {\n    const s = sources[i];\n    proxy = proxy || (!!s && $PROXY in s);\n    sources[i] = typeof s === \"function\" ? ((proxy = true), createMemo(s)) : s;\n  }\n  if (proxy) {\n    return new Proxy(\n      {\n        get(property) {\n          for (let i = sources.length - 1; i >= 0; i--) {\n            const v = resolveSource(sources[i])[property];\n            if (v !== undefined) return v;\n          }\n        },\n        has(property) {\n          for (let i = sources.length - 1; i >= 0; i--) {\n            if (property in resolveSource(sources[i])) return true;\n          }\n          return false;\n        },\n        keys() {\n          const keys = [];\n          for (let i = 0; i < sources.length; i++)\n            keys.push(...Object.keys(resolveSource(sources[i])));\n          return [...new Set(keys)];\n        }\n      },\n      propTraps\n    );\n  }\n  const sourcesMap = {};\n  const defined = Object.create(null);\n  for (let i = sources.length - 1; i >= 0; i--) {\n    const source = sources[i];\n    if (!source) continue;\n    const sourceKeys = Object.getOwnPropertyNames(source);\n    for (let i = sourceKeys.length - 1; i >= 0; i--) {\n      const key = sourceKeys[i];\n      if (key === \"__proto__\" || key === \"constructor\") continue;\n      const desc = Object.getOwnPropertyDescriptor(source, key);\n      if (!defined[key]) {\n        defined[key] = desc.get\n          ? {\n              enumerable: true,\n              configurable: true,\n              get: resolveSources.bind((sourcesMap[key] = [desc.get.bind(source)]))\n            }\n          : desc.value !== undefined\n          ? desc\n          : undefined;\n      } else {\n        const sources = sourcesMap[key];\n        if (sources) {\n          if (desc.get) sources.push(desc.get.bind(source));\n          else if (desc.value !== undefined) sources.push(() => desc.value);\n        }\n      }\n    }\n  }\n  const target = {};\n  const definedKeys = Object.keys(defined);\n  for (let i = definedKeys.length - 1; i >= 0; i--) {\n    const key = definedKeys[i],\n      desc = defined[key];\n    if (desc && desc.get) Object.defineProperty(target, key, desc);\n    else target[key] = desc ? desc.value : undefined;\n  }\n  return target;\n}\nfunction splitProps(props, ...keys) {\n  if ($PROXY in props) {\n    const blocked = new Set(keys.length > 1 ? keys.flat() : keys[0]);\n    const res = keys.map(k => {\n      return new Proxy(\n        {\n          get(property) {\n            return k.includes(property) ? props[property] : undefined;\n          },\n          has(property) {\n            return k.includes(property) && property in props;\n          },\n          keys() {\n            return k.filter(property => property in props);\n          }\n        },\n        propTraps\n      );\n    });\n    res.push(\n      new Proxy(\n        {\n          get(property) {\n            return blocked.has(property) ? undefined : props[property];\n          },\n          has(property) {\n            return blocked.has(property) ? false : property in props;\n          },\n          keys() {\n            return Object.keys(props).filter(k => !blocked.has(k));\n          }\n        },\n        propTraps\n      )\n    );\n    return res;\n  }\n  const otherObject = {};\n  const objects = keys.map(() => ({}));\n  for (const propName of Object.getOwnPropertyNames(props)) {\n    const desc = Object.getOwnPropertyDescriptor(props, propName);\n    const isDefaultDesc =\n      !desc.get && !desc.set && desc.enumerable && desc.writable && desc.configurable;\n    let blocked = false;\n    let objectIndex = 0;\n    for (const k of keys) {\n      if (k.includes(propName)) {\n        blocked = true;\n        isDefaultDesc\n          ? (objects[objectIndex][propName] = desc.value)\n          : Object.defineProperty(objects[objectIndex], propName, desc);\n      }\n      ++objectIndex;\n    }\n    if (!blocked) {\n      isDefaultDesc\n        ? (otherObject[propName] = desc.value)\n        : Object.defineProperty(otherObject, propName, desc);\n    }\n  }\n  return [...objects, otherObject];\n}\nfunction lazy(fn) {\n  let comp;\n  let p;\n  const wrap = props => {\n    const ctx = sharedConfig.context;\n    if (ctx) {\n      const [s, set] = createSignal();\n      sharedConfig.count || (sharedConfig.count = 0);\n      sharedConfig.count++;\n      (p || (p = fn())).then(mod => {\n        setHydrateContext(ctx);\n        sharedConfig.count--;\n        set(() => mod.default);\n        setHydrateContext();\n      });\n      comp = s;\n    } else if (!comp) {\n      const [s] = createResource(() => (p || (p = fn())).then(mod => mod.default));\n      comp = s;\n    }\n    let Comp;\n    return createMemo(\n      () =>\n        (Comp = comp()) &&\n        untrack(() => {\n          if (false);\n          if (!ctx) return Comp(props);\n          const c = sharedConfig.context;\n          setHydrateContext(ctx);\n          const r = Comp(props);\n          setHydrateContext(c);\n          return r;\n        })\n    );\n  };\n  wrap.preload = () => p || ((p = fn()).then(mod => (comp = () => mod.default)), p);\n  return wrap;\n}\nlet counter = 0;\nfunction createUniqueId() {\n  const ctx = sharedConfig.context;\n  return ctx ? `${ctx.id}${ctx.count++}` : `cl-${counter++}`;\n}\n\nconst narrowedError = name => `Stale read from <${name}>.`;\nfunction For(props) {\n  const fallback = \"fallback\" in props && {\n    fallback: () => props.fallback\n  };\n  return createMemo(mapArray(() => props.each, props.children, fallback || undefined));\n}\nfunction Index(props) {\n  const fallback = \"fallback\" in props && {\n    fallback: () => props.fallback\n  };\n  return createMemo(indexArray(() => props.each, props.children, fallback || undefined));\n}\nfunction Show(props) {\n  const keyed = props.keyed;\n  const condition = createMemo(() => props.when, undefined, {\n    equals: (a, b) => (keyed ? a === b : !a === !b)\n  });\n  return createMemo(\n    () => {\n      const c = condition();\n      if (c) {\n        const child = props.children;\n        const fn = typeof child === \"function\" && child.length > 0;\n        return fn\n          ? untrack(() =>\n              child(\n                keyed\n                  ? c\n                  : () => {\n                      if (!untrack(condition)) throw narrowedError(\"Show\");\n                      return props.when;\n                    }\n              )\n            )\n          : child;\n      }\n      return props.fallback;\n    },\n    undefined,\n    undefined\n  );\n}\nfunction Switch(props) {\n  let keyed = false;\n  const equals = (a, b) => (keyed ? a[1] === b[1] : !a[1] === !b[1]) && a[2] === b[2];\n  const conditions = children(() => props.children),\n    evalConditions = createMemo(\n      () => {\n        let conds = conditions();\n        if (!Array.isArray(conds)) conds = [conds];\n        for (let i = 0; i < conds.length; i++) {\n          const c = conds[i].when;\n          if (c) {\n            keyed = !!conds[i].keyed;\n            return [i, c, conds[i]];\n          }\n        }\n        return [-1];\n      },\n      undefined,\n      {\n        equals\n      }\n    );\n  return createMemo(\n    () => {\n      const [index, when, cond] = evalConditions();\n      if (index < 0) return props.fallback;\n      const c = cond.children;\n      const fn = typeof c === \"function\" && c.length > 0;\n      return fn\n        ? untrack(() =>\n            c(\n              keyed\n                ? when\n                : () => {\n                    if (untrack(evalConditions)[0] !== index) throw narrowedError(\"Match\");\n                    return cond.when;\n                  }\n            )\n          )\n        : c;\n    },\n    undefined,\n    undefined\n  );\n}\nfunction Match(props) {\n  return props;\n}\nlet Errors;\nfunction resetErrorBoundaries() {\n  Errors && [...Errors].forEach(fn => fn());\n}\nfunction ErrorBoundary(props) {\n  let err;\n  if (sharedConfig.context && sharedConfig.load)\n    err = sharedConfig.load(sharedConfig.context.id + sharedConfig.context.count);\n  const [errored, setErrored] = createSignal(err, undefined);\n  Errors || (Errors = new Set());\n  Errors.add(setErrored);\n  onCleanup(() => Errors.delete(setErrored));\n  return createMemo(\n    () => {\n      let e;\n      if ((e = errored())) {\n        const f = props.fallback;\n        return typeof f === \"function\" && f.length ? untrack(() => f(e, () => setErrored())) : f;\n      }\n      return catchError(() => props.children, setErrored);\n    },\n    undefined,\n    undefined\n  );\n}\n\nconst suspenseListEquals = (a, b) =>\n  a.showContent === b.showContent && a.showFallback === b.showFallback;\nconst SuspenseListContext = createContext();\nfunction SuspenseList(props) {\n  let [wrapper, setWrapper] = createSignal(() => ({\n      inFallback: false\n    })),\n    show;\n  const listContext = useContext(SuspenseListContext);\n  const [registry, setRegistry] = createSignal([]);\n  if (listContext) {\n    show = listContext.register(createMemo(() => wrapper()().inFallback));\n  }\n  const resolved = createMemo(\n    prev => {\n      const reveal = props.revealOrder,\n        tail = props.tail,\n        { showContent = true, showFallback = true } = show ? show() : {},\n        reg = registry(),\n        reverse = reveal === \"backwards\";\n      if (reveal === \"together\") {\n        const all = reg.every(inFallback => !inFallback());\n        const res = reg.map(() => ({\n          showContent: all && showContent,\n          showFallback\n        }));\n        res.inFallback = !all;\n        return res;\n      }\n      let stop = false;\n      let inFallback = prev.inFallback;\n      const res = [];\n      for (let i = 0, len = reg.length; i < len; i++) {\n        const n = reverse ? len - i - 1 : i,\n          s = reg[n]();\n        if (!stop && !s) {\n          res[n] = {\n            showContent,\n            showFallback\n          };\n        } else {\n          const next = !stop;\n          if (next) inFallback = true;\n          res[n] = {\n            showContent: next,\n            showFallback: !tail || (next && tail === \"collapsed\") ? showFallback : false\n          };\n          stop = true;\n        }\n      }\n      if (!stop) inFallback = false;\n      res.inFallback = inFallback;\n      return res;\n    },\n    {\n      inFallback: false\n    }\n  );\n  setWrapper(() => resolved);\n  return createComponent(SuspenseListContext.Provider, {\n    value: {\n      register: inFallback => {\n        let index;\n        setRegistry(registry => {\n          index = registry.length;\n          return [...registry, inFallback];\n        });\n        return createMemo(() => resolved()[index], undefined, {\n          equals: suspenseListEquals\n        });\n      }\n    },\n    get children() {\n      return props.children;\n    }\n  });\n}\nfunction Suspense(props) {\n  let counter = 0,\n    show,\n    ctx,\n    p,\n    flicker,\n    error;\n  const [inFallback, setFallback] = createSignal(false),\n    SuspenseContext = getSuspenseContext(),\n    store = {\n      increment: () => {\n        if (++counter === 1) setFallback(true);\n      },\n      decrement: () => {\n        if (--counter === 0) setFallback(false);\n      },\n      inFallback,\n      effects: [],\n      resolved: false\n    },\n    owner = getOwner();\n  if (sharedConfig.context && sharedConfig.load) {\n    const key = sharedConfig.context.id + sharedConfig.context.count;\n    let ref = sharedConfig.load(key);\n    if (ref) {\n      if (typeof ref !== \"object\" || ref.status !== \"success\") p = ref;\n      else sharedConfig.gather(key);\n    }\n    if (p && p !== \"$$f\") {\n      const [s, set] = createSignal(undefined, {\n        equals: false\n      });\n      flicker = s;\n      p.then(\n        () => {\n          if (sharedConfig.done) return set();\n          sharedConfig.gather(key);\n          setHydrateContext(ctx);\n          set();\n          setHydrateContext();\n        },\n        err => {\n          error = err;\n          set();\n        }\n      );\n    }\n  }\n  const listContext = useContext(SuspenseListContext);\n  if (listContext) show = listContext.register(store.inFallback);\n  let dispose;\n  onCleanup(() => dispose && dispose());\n  return createComponent(SuspenseContext.Provider, {\n    value: store,\n    get children() {\n      return createMemo(() => {\n        if (error) throw error;\n        ctx = sharedConfig.context;\n        if (flicker) {\n          flicker();\n          return (flicker = undefined);\n        }\n        if (ctx && p === \"$$f\") setHydrateContext();\n        const rendered = createMemo(() => props.children);\n        return createMemo(prev => {\n          const inFallback = store.inFallback(),\n            { showContent = true, showFallback = true } = show ? show() : {};\n          if ((!inFallback || (p && p !== \"$$f\")) && showContent) {\n            store.resolved = true;\n            dispose && dispose();\n            dispose = ctx = p = undefined;\n            resumeEffects(store.effects);\n            return rendered();\n          }\n          if (!showFallback) return;\n          if (dispose) return prev;\n          return createRoot(disposer => {\n            dispose = disposer;\n            if (ctx) {\n              setHydrateContext({\n                id: ctx.id + \"f\",\n                count: 0\n              });\n              ctx = undefined;\n            }\n            return props.fallback;\n          }, owner);\n        });\n      });\n    }\n  });\n}\n\nconst DEV = undefined;\n\nexport {\n  $DEVCOMP,\n  $PROXY,\n  $TRACK,\n  DEV,\n  ErrorBoundary,\n  For,\n  Index,\n  Match,\n  Show,\n  Suspense,\n  SuspenseList,\n  Switch,\n  batch,\n  cancelCallback,\n  catchError,\n  children,\n  createComponent,\n  createComputed,\n  createContext,\n  createDeferred,\n  createEffect,\n  createMemo,\n  createReaction,\n  createRenderEffect,\n  createResource,\n  createRoot,\n  createSelector,\n  createSignal,\n  createUniqueId,\n  enableExternalSource,\n  enableHydration,\n  enableScheduling,\n  equalFn,\n  from,\n  getListener,\n  getOwner,\n  indexArray,\n  lazy,\n  mapArray,\n  mergeProps,\n  observable,\n  on,\n  onCleanup,\n  onError,\n  onMount,\n  requestCallback,\n  resetErrorBoundaries,\n  runWithOwner,\n  sharedConfig,\n  splitProps,\n  startTransition,\n  untrack,\n  useContext,\n  useTransition\n};\n","import {\n  createRoot,\n  createRenderEffect,\n  mergeProps,\n  createMemo,\n  createComponent,\n  untrack\n} from \"solid-js\";\n\nfunction createRenderer$1({\n  createElement,\n  createTextNode,\n  isTextNode,\n  replaceText,\n  insertNode,\n  removeNode,\n  setProperty,\n  getParentNode,\n  getFirstChild,\n  getNextSibling\n}) {\n  function insert(parent, accessor, marker, initial) {\n    if (marker !== undefined && !initial) initial = [];\n    if (typeof accessor !== \"function\") return insertExpression(parent, accessor, initial, marker);\n    createRenderEffect(current => insertExpression(parent, accessor(), current, marker), initial);\n  }\n  function insertExpression(parent, value, current, marker, unwrapArray) {\n    while (typeof current === \"function\") current = current();\n    if (value === current) return current;\n    const t = typeof value,\n      multi = marker !== undefined;\n    if (t === \"string\" || t === \"number\") {\n      if (t === \"number\") value = value.toString();\n      if (multi) {\n        let node = current[0];\n        if (node && isTextNode(node)) {\n          replaceText(node, value);\n        } else node = createTextNode(value);\n        current = cleanChildren(parent, current, marker, node);\n      } else {\n        if (current !== \"\" && typeof current === \"string\") {\n          replaceText(getFirstChild(parent), (current = value));\n        } else {\n          cleanChildren(parent, current, marker, createTextNode(value));\n          current = value;\n        }\n      }\n    } else if (value == null || t === \"boolean\") {\n      current = cleanChildren(parent, current, marker);\n    } else if (t === \"function\") {\n      createRenderEffect(() => {\n        let v = value();\n        while (typeof v === \"function\") v = v();\n        current = insertExpression(parent, v, current, marker);\n      });\n      return () => current;\n    } else if (Array.isArray(value)) {\n      const array = [];\n      if (normalizeIncomingArray(array, value, unwrapArray)) {\n        createRenderEffect(\n          () => (current = insertExpression(parent, array, current, marker, true))\n        );\n        return () => current;\n      }\n      if (array.length === 0) {\n        const replacement = cleanChildren(parent, current, marker);\n        if (multi) return (current = replacement);\n      } else {\n        if (Array.isArray(current)) {\n          if (current.length === 0) {\n            appendNodes(parent, array, marker);\n          } else reconcileArrays(parent, current, array);\n        } else if (current == null || current === \"\") {\n          appendNodes(parent, array);\n        } else {\n          reconcileArrays(parent, (multi && current) || [getFirstChild(parent)], array);\n        }\n      }\n      current = array;\n    } else {\n      if (Array.isArray(current)) {\n        if (multi) return (current = cleanChildren(parent, current, marker, value));\n        cleanChildren(parent, current, null, value);\n      } else if (current == null || current === \"\" || !getFirstChild(parent)) {\n        insertNode(parent, value);\n      } else replaceNode(parent, value, getFirstChild(parent));\n      current = value;\n    }\n    return current;\n  }\n  function normalizeIncomingArray(normalized, array, unwrap) {\n    let dynamic = false;\n    for (let i = 0, len = array.length; i < len; i++) {\n      let item = array[i],\n        t;\n      if (item == null || item === true || item === false);\n      else if (Array.isArray(item)) {\n        dynamic = normalizeIncomingArray(normalized, item) || dynamic;\n      } else if ((t = typeof item) === \"string\" || t === \"number\") {\n        normalized.push(createTextNode(item));\n      } else if (t === \"function\") {\n        if (unwrap) {\n          while (typeof item === \"function\") item = item();\n          dynamic =\n            normalizeIncomingArray(normalized, Array.isArray(item) ? item : [item]) || dynamic;\n        } else {\n          normalized.push(item);\n          dynamic = true;\n        }\n      } else normalized.push(item);\n    }\n    return dynamic;\n  }\n  function reconcileArrays(parentNode, a, b) {\n    let bLength = b.length,\n      aEnd = a.length,\n      bEnd = bLength,\n      aStart = 0,\n      bStart = 0,\n      after = getNextSibling(a[aEnd - 1]),\n      map = null;\n    while (aStart < aEnd || bStart < bEnd) {\n      if (a[aStart] === b[bStart]) {\n        aStart++;\n        bStart++;\n        continue;\n      }\n      while (a[aEnd - 1] === b[bEnd - 1]) {\n        aEnd--;\n        bEnd--;\n      }\n      if (aEnd === aStart) {\n        const node =\n          bEnd < bLength ? (bStart ? getNextSibling(b[bStart - 1]) : b[bEnd - bStart]) : after;\n        while (bStart < bEnd) insertNode(parentNode, b[bStart++], node);\n      } else if (bEnd === bStart) {\n        while (aStart < aEnd) {\n          if (!map || !map.has(a[aStart])) removeNode(parentNode, a[aStart]);\n          aStart++;\n        }\n      } else if (a[aStart] === b[bEnd - 1] && b[bStart] === a[aEnd - 1]) {\n        const node = getNextSibling(a[--aEnd]);\n        insertNode(parentNode, b[bStart++], getNextSibling(a[aStart++]));\n        insertNode(parentNode, b[--bEnd], node);\n        a[aEnd] = b[bEnd];\n      } else {\n        if (!map) {\n          map = new Map();\n          let i = bStart;\n          while (i < bEnd) map.set(b[i], i++);\n        }\n        const index = map.get(a[aStart]);\n        if (index != null) {\n          if (bStart < index && index < bEnd) {\n            let i = aStart,\n              sequence = 1,\n              t;\n            while (++i < aEnd && i < bEnd) {\n              if ((t = map.get(a[i])) == null || t !== index + sequence) break;\n              sequence++;\n            }\n            if (sequence > index - bStart) {\n              const node = a[aStart];\n              while (bStart < index) insertNode(parentNode, b[bStart++], node);\n            } else replaceNode(parentNode, b[bStart++], a[aStart++]);\n          } else aStart++;\n        } else removeNode(parentNode, a[aStart++]);\n      }\n    }\n  }\n  function cleanChildren(parent, current, marker, replacement) {\n    if (marker === undefined) {\n      let removed;\n      while ((removed = getFirstChild(parent))) removeNode(parent, removed);\n      replacement && insertNode(parent, replacement);\n      return \"\";\n    }\n    const node = replacement || createTextNode(\"\");\n    if (current.length) {\n      let inserted = false;\n      for (let i = current.length - 1; i >= 0; i--) {\n        const el = current[i];\n        if (node !== el) {\n          const isParent = getParentNode(el) === parent;\n          if (!inserted && !i)\n            isParent ? replaceNode(parent, node, el) : insertNode(parent, node, marker);\n          else isParent && removeNode(parent, el);\n        } else inserted = true;\n      }\n    } else insertNode(parent, node, marker);\n    return [node];\n  }\n  function appendNodes(parent, array, marker) {\n    for (let i = 0, len = array.length; i < len; i++) insertNode(parent, array[i], marker);\n  }\n  function replaceNode(parent, newNode, oldNode) {\n    insertNode(parent, newNode, oldNode);\n    removeNode(parent, oldNode);\n  }\n  function spreadExpression(node, props, prevProps = {}, skipChildren) {\n    props || (props = {});\n    if (!skipChildren) {\n      createRenderEffect(\n        () => (prevProps.children = insertExpression(node, props.children, prevProps.children))\n      );\n    }\n    createRenderEffect(() => props.ref && props.ref(node));\n    createRenderEffect(() => {\n      for (const prop in props) {\n        if (prop === \"children\" || prop === \"ref\") continue;\n        const value = props[prop];\n        if (value === prevProps[prop]) continue;\n        setProperty(node, prop, value, prevProps[prop]);\n        prevProps[prop] = value;\n      }\n    });\n    return prevProps;\n  }\n  return {\n    render(code, element) {\n      let disposer;\n      createRoot(dispose => {\n        disposer = dispose;\n        insert(element, code());\n      });\n      return disposer;\n    },\n    insert,\n    spread(node, accessor, skipChildren) {\n      if (typeof accessor === \"function\") {\n        createRenderEffect(current => spreadExpression(node, accessor(), current, skipChildren));\n      } else spreadExpression(node, accessor, undefined, skipChildren);\n    },\n    createElement,\n    createTextNode,\n    insertNode,\n    setProp(node, name, value, prev) {\n      setProperty(node, name, value, prev);\n      return value;\n    },\n    mergeProps,\n    effect: createRenderEffect,\n    memo: createMemo,\n    createComponent,\n    use(fn, element, arg) {\n      return untrack(() => fn(element, arg));\n    }\n  };\n}\n\nfunction createRenderer(options) {\n  const renderer = createRenderer$1(options);\n  renderer.mergeProps = mergeProps;\n  return renderer;\n}\n\nexport { createRenderer };\n","import type { JSX } from \"solid-js\";\nimport { createRenderer } from \"solid-js/universal\";\nimport { z } from \"zod\";\n\n//TODO: test required\nconst eventListener = z\n  .function()\n  .args(z.instanceof(Event))\n  .or(\n    z.object({\n      handleEvent: z.function().args(z.instanceof(Event)),\n    }),\n  );\n\nconst styleObject = z.record(z.string(), z.string());\n\nexport const {\n  render,\n  effect,\n  memo,\n  createComponent,\n  createElement,\n  createTextNode,\n  insertNode,\n  /**\n   * insertBefore\n   */\n  insert,\n  spread,\n  setProp,\n  mergeProps,\n} = createRenderer<JSX.Element>({\n  createElement: (tag: string): Element => {\n    if (tag.startsWith(\"xul:\")) {\n      return document.createXULElement(tag.replace(\"xul:\", \"\"));\n    }\n    return document.createElement(tag);\n  },\n  createTextNode: (value: string): Text => {\n    return document.createTextNode(value);\n  },\n  replaceText: (textNode: Text, value: string): void => {\n    textNode.data = value;\n  },\n  isTextNode: (node: Node): boolean => {\n    return node.nodeType === 3;\n  },\n  setProperty: <T>(\n    node: JSX.Element,\n    name: string,\n    value: T,\n    prev?: T,\n  ): void => {\n    if (node instanceof Element) {\n      const resultEvListener = eventListener.safeParse(value);\n      const resultStyleObject = styleObject.safeParse(value);\n      if (resultEvListener.success) {\n        //the eventListener name is on~~~\n        //so have to remove the `on`\n        const evName = name.slice(2).toLowerCase();\n        node.addEventListener(evName, resultEvListener.data);\n      } else if (resultStyleObject.success) {\n        let tmp = \"\";\n        for (const [idx, v] of Object.entries(resultStyleObject.data)) {\n          tmp += `${idx}:${v};`;\n        }\n        node.setAttribute(name, tmp);\n      } else if (typeof value === \"string\") {\n        node.setAttribute(name, value);\n      } else if (typeof value === \"number\" || typeof value === \"boolean\") {\n        node.setAttribute(name, value.toString());\n      } else if (value === undefined) {\n        node.removeAttribute(name);\n      } else {\n        throw Error(\n          `unreachable! @nora:solid-xul:setProperty the value is not EventListener, style object, string, number, nor boolean | is ${value}`,\n        );\n      }\n    } else {\n      throw Error(\n        `unreachable! @nora:solid-xul:setProperty the node is not Element | is ${node}`,\n      );\n    }\n  },\n  insertNode: (parent: Node, node: JSX.Element, anchor?: Node): void => {\n    console.log(node);\n    if (node instanceof Node) {\n      parent.insertBefore(node, anchor ?? null);\n    } else {\n      throw Error(\"solid-xul insertNode `node` is not Node\");\n    }\n  },\n  removeNode: (parent: Node, node: JSX.Element): void => {\n    if (node instanceof Node) {\n      parent.removeChild(node);\n    } else {\n      throw Error(\"solid-xul insertNode `node` is not Element nor XULElement\");\n    }\n  },\n  getParentNode: (node: Node): JSX.Element => {\n    return node.parentNode;\n  },\n  getFirstChild: (node: Node): JSX.Element => {\n    return node.firstChild;\n  },\n  getNextSibling: (node: Node): JSX.Element => {\n    return node.nextSibling;\n  },\n});\n","import { createEffect, createSignal } from \"solid-js\";\nimport {\n  CSKCommands,\n  CSKData,\n  zCSKCommands,\n  zCSKData,\n} from \"../../components/custom-shortcut-key/defines\";\nimport { commands } from \"../../components/custom-shortcut-key/commands\";\nimport { checkIsSystemShortcut } from \"../../components/custom-shortcut-key/utils\";\n\nexport const [editingStatus, setEditingStatus] = createSignal<string | null>(\n  null,\n);\nexport const [currentFocus, setCurrentFocus] = createSignal<\n  keyof typeof commands | null\n>(null);\n\ncreateEffect(() => {\n  console.log(currentFocus() !== null);\n  //@ts-expect-error\n  Services.obs.notifyObservers(\n    null,\n    \"nora-csk\",\n    JSON.stringify({\n      type: \"disable-csk\",\n      data: currentFocus() !== null,\n    } as CSKCommands),\n  );\n});\n\nexport const [cskData, setCSKData] = createSignal(zCSKData.parse({}));\n\nexport function cskDatumToString(data: CSKData, key: keyof CSKData) {\n  //TODO: Meta key\n  if (key in data) {\n    const datum = data[key];\n    return `${datum?.modifiers.ctrl ? \"Ctrl + \" : \"\"}${\n      datum?.modifiers.alt ? \"Alt + \" : \"\"\n    }${datum?.modifiers.shift ? \"Shift + \" : \"\"}${datum?.key}`;\n  } else {\n    return \"\";\n  }\n}\n\nexport function initSetKey() {\n  document.addEventListener(\"keydown\", (ev) => {\n    if (ev.key === \"Escape\" || ev.key === \"Tab\") {\n      return;\n    }\n\n    const focus = currentFocus();\n\n    if (!ev.altKey && !ev.ctrlKey && !ev.shiftKey && !ev.metaKey) {\n      if (ev.key === \"Delete\" || ev.key === \"Backspace\") {\n        if (focus) {\n          ev.preventDefault();\n          const temp = cskData();\n          for (const key of Object.keys(temp)) {\n            if (key === focus) {\n              delete temp[key];\n              setCSKData(temp);\n              setEditingStatus(cskDatumToString(cskData(), focus));\n              break;\n            }\n          }\n          console.log(cskData);\n        }\n        return;\n      }\n    }\n\n    // on register\n\n    if (focus) {\n      ev.preventDefault();\n      if (\n        [\"Control\", \"Alt\", \"Meta\", \"Shift\"].filter((k) => ev.key.includes(k))\n          .length === 0\n      ) {\n        if (checkIsSystemShortcut(ev)) {\n          console.warn(`This Event is registered in System: ${ev}`);\n          return;\n        }\n        setCSKData({\n          ...cskData(),\n          [focus]: {\n            key: ev.key,\n            modifiers: {\n              alt: ev.altKey,\n              ctrl: ev.ctrlKey,\n              meta: ev.metaKey,\n              shift: ev.shiftKey,\n            },\n          },\n        });\n        setEditingStatus(cskDatumToString(cskData(), focus));\n      }\n    }\n  });\n}\n","import { For } from \"solid-js\";\nimport {\n  cskData,\n  cskDatumToString,\n  currentFocus,\n  editingStatus,\n  setCurrentFocus,\n  setEditingStatus,\n} from \"./setkey\";\nimport {\n  commands,\n  csk_category,\n} from \"../../components/custom-shortcut-key/commands\";\n\nexport function CustomShortcutKeyPage() {\n  return (\n    <>\n      <div>\n        <h1>カスタムショートカットキー</h1>\n        <xul:description class=\"indent tip-caption\">\n          Floorp Daylight のキーボードショートカットをカスタマイズしましょう。\n          Floorp Daylight には、80\n          以上のカスタマイズ可能なキーボードショートカットが用意されています！重複したキーボードショートカットは機能しません。これらの設定を適用するには、\n          Floorp Daylight を再起動してください。\n        </xul:description>\n        <xul:checkbox label=\"Firefox のキーボードショートカットを無効にする\" />\n      </div>\n      <For each={csk_category}>\n        {(category) => (\n          <>\n            <div\n              data-l10n-id={\"floorp-custom-actions-\" + category}\n              style={{\n                \"padding-top\": \"20px\",\n              }}\n            >\n              {category}\n            </div>\n            <For each={Object.entries(commands)}>\n              {([key, value]) =>\n                value.type === category ? (\n                  <div style={{ display: \"flex\" }}>\n                    <label\n                      style={{ \"flex-grow\": \"1\" }}\n                      data-l10n-id={\n                        \"floorp-custom-actions-\" +\n                        key.replace(\"floorp-\", \"\").replace(\"gecko-\", \"\")\n                      }\n                    >\n                      {key}\n                    </label>\n                    <input\n                      value={\n                        currentFocus() === key && editingStatus() !== null\n                          ? editingStatus()!\n                          : cskDatumToString(cskData(), key)\n                      }\n                      onFocus={(ev) => {\n                        setCurrentFocus(key);\n                      }}\n                      onBlur={(ev) => {\n                        setEditingStatus(null);\n                        if (currentFocus() === key) {\n                          setCurrentFocus(null);\n                        }\n                      }}\n                      readonly={true}\n                      placeholder=\"Type a shortcut\"\n                      style={{\n                        \"border-radius\": \"5px\",\n                        border: \"1px solid gray\",\n                        padding: \"6px 10px\",\n                      }}\n                    />\n                  </div>\n                ) : undefined\n              }\n            </For>\n          </>\n        )}\n      </For>\n    </>\n  );\n}\n","import { createSignal } from \"solid-js\";\n\nexport const [showCSK, setShowCSK] = createSignal(false);\n\nconst onHashChange = () => {\n  switch (location.hash) {\n    case \"#csk\": {\n      setShowCSK(true);\n      break;\n    }\n    default: {\n      setShowCSK(false);\n    }\n  }\n};\n\nexport function initHashChange() {\n  window.addEventListener(\"hashchange\", onHashChange);\n  onHashChange();\n}\n","import type {} from \"solid-styled-jsx\";\nimport { CustomShortcutKeyPage } from \"./page\";\n\nimport \"virtual:uno.css\";\nimport { showCSK } from \"../hashchange\";\nimport { initSetKey } from \"./setkey\";\nimport { Show } from \"solid-js\";\n\nexport function csk() {\n  initSetKey();\n  return (\n    <Show when={showCSK()}>\n      <CustomShortcutKeyPage />\n    </Show>\n  );\n}\n","import { onMount } from \"solid-js\";\n\nexport function category() {\n  return (\n    <xul:richlistitem\n      id=\"category-csk\"\n      class=\"category\"\n      value=\"paneCsk\"\n      helpTopic=\"prefs-csk\"\n      data-l10n-id=\"category-CSK\"\n      data-l10n-attrs=\"tooltiptext\"\n      align=\"center\"\n    >\n      <xul:image class=\"category-icon\" />\n      <xul:label\n        class=\"category-name\"\n        flex=\"1\"\n        data-l10n-id=\"category-CSK-title\"\n      ></xul:label>\n    </xul:richlistitem>\n  );\n}\n","import { insert, render } from \"./solid-xul/solid-xul\";\nimport { csk } from \"./preference/csk\";\nimport { category } from \"./preference/csk/category\";\nimport { initHashChange } from \"./preference/hashchange\";\nimport { CustomShortcutKey } from \"./components/custom-shortcut-key/index\";\n\nconsole.log(\"hallo csk\");\n\nconst init = () => {\n  insert(\n    document.querySelector(\"#categories\"),\n    category(),\n    document.getElementById(\"category-Downloads\"),\n  );\n  render(csk, document.querySelector(\".pane-container\"));\n  initHashChange();\n  switch (location.hash) {\n    case \"#csk\": {\n      document.getElementById(\"category-csk\")?.click();\n      break;\n    }\n  }\n};\n\nconst foo = () => {\n  if (document.querySelector(\".pane-container\")) {\n    console.log(\"render 1\");\n    init();\n  } else {\n    console.log(\"render 2\");\n    init();\n  }\n};\n\nif (document.readyState !== \"loading\") {\n  foo();\n} else {\n  document.addEventListener(\"DOMContentLoaded\", foo);\n}\n\n// const gCSKPane = {\n//   init() {\n\n//   },\n// };\n// window.gCSKPane = gCSKPane;\n"],"names":["value","init","createComponent","mergeProps","i","sources","createElement","createTextNode","insertNode","insert","dispose","CustomShortcutKeyPage","_el$","_$createElement","_el$2","_el$4","_el$6","_$insertNode","_$createTextNode","_$createComponent","For","each","csk_category","children","category","_el$7","_$setProp","_$insert","Object","entries","commands","key","type","_el$8","_el$9","_el$10","display","ev","setCurrentFocus","setEditingStatus","currentFocus","border","padding","_$effect","_p$","_v$","replace","_v$2","editingStatus","cskDatumToString","cskData","e","t","undefined","csk","Show","when","showCSK","_el$3"],"mappings":"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","x_google_ignoreList":[0,1]}